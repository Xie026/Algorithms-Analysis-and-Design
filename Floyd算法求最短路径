
/*Floyd算法求最短路径*/
#include<stdio.h>
#define N 4//最大顶点数为4
#define INF 1000000000//表示无穷大

int graph[N][N];//邻接矩阵存储图
int path[N][N];//path存储两点之间最短路径上经过的离终点最近的一个点 

void Floyd(){//从i号顶点到j号顶点只经过前k号点的最短路程
	int i,j,k;
	for(k=1;k<=N;k++){
		for(i=1;i<=N;i++){
			for(j=1;j<=N;j++){
				if(graph[i][j]>(graph[i][k]+graph[k][j])){
					graph[i][j]=graph[i][k]+graph[k][j];
					path[i][j]=k;
				}
			}
		}
	}
}

int main(){
	int Nv,Ne;
	printf("输入顶点数和边数：");
	scanf("%d%d",&Nv,&Ne);
	int i,j;
    for(i=1;i<=Nv;i++){//初始化图，设一开始每一个节点都不可达   
        for(j=1;j<=Nv;j++){  
            graph[i][j]=INF;
			path[i][j]=-1;
			if(i==j){
				graph[i][j]=0;
				path[i][j]=j;
			} 
        }  
    }
	
	int a,b,weight;
	for(i=1;i<Ne;i++){
		scanf("%d%d%d",&a,&b,&weight);
        graph[a][b]=weight;
        path[a][b]=b;
	} 
	
	printf("顶点之间的最短距离矩阵：\n");
	Floyd();
	for(i=1;i<=Nv;i++){
		for(j=1;j<=Nv;j++){
			printf("%d ",graph[i][j]);
		}
		printf("\n");
	}
	return 0;
} 
