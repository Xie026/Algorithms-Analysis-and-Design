
/*投资问题—动态规划*/
#include<stdio.h>
const int M=5;
const int N=6;
int X[5]={0};
int F[M][N]={0};//F用于存放产生的最大效益，例如F[3][2]，表示有3个项目时，投资2万元产生的最大效益 
int Money[M][N]={0};//Money用于存放产生最大效益时，给第k个项目分配的资金


int MaxProfit(int F[M][N],int f[M][N],int n,int m){
	//n表示项目数，m表示资金数 
	//f用于存放项目与投资之间的效益关系，如f[1][2]，表示对第一个项目投资2万元产生的效益
	//F用于存放产生的最大效益，例如F[3][2]，表示有3个项目时，投资2万元产生的最大效益
	//Money用于存放产生最大效益时，给第k个项目分配的资金
	for(int k=1;k<=n;k++){//第k个项目 
		for(int x=0;x<=m;x++){//k个项目共分配x万元 
			
			//初始化
			F[k][x]=0;
			Money[k][x]=0; 
			
			for(int xk=0;xk<=x;xk++){//第k个项目分配xk 
			
				//如果投资增加后，最大收益增加，更新最大收益 
				if(F[k][x]<f[k][xk]+F[k-1][x-xk]){ 
					F[k][x]=f[k][xk]+F[k-1][x-xk];
					Money[k][x]=xk;//第k个项目投资xk万元 
				} 
			}
		}
	}
	
	return F[n][m]; 
}

void ff(int F[M][N],int X[5],int n,int m){
	for(int i=n;i>=1;i--){//从最后一个项目开始遍历 
		X[i]=Money[i][m];//第i个项目投资了xk万元
		m=m-X[i];//总资金数减去给当前项目投资的资金数后继续遍历 
		printf("第%d个项目投资%d万元\n",i,X[i]); 
	}
}

int main(){
	int f[M][N]={0,0,0,0,0,0,
				 0,11,12,13,14,15,
				 0,0,5,10,15,20,
				 0,2,10,30,32,40,
				 0,20,21,22,23,24};
	
	int n,m;
	printf("总项目数:");
	scanf("%d",&n);
	printf("总投资额:");
	scanf("%d",&m);
	printf("\n");
	printf("最大收益:%d万元",MaxProfit(F,f,n,m));
	printf("\n\n");
	printf("投资明细:");
	printf("\n");
	ff(F,X,n,m);
	return 0;
}
