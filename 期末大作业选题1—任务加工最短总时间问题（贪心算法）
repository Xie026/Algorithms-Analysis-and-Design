
/*期末大作业选题1—任务加工最短总时间问题（贪心算法）*/
#include<stdio.h>
#include<stdlib.h>

void bubble_sort(int n,int t[],int number[]){//冒泡排序，将任务时间降序排序 
	for(int i=0;i<n-1;i++){
		for(int j=0;j<n-i-1;j++){
			if(t[j]<t[j+1]){
				int tt=0;
				tt=t[j];
				t[j]=t[j+1];
				t[j+1]=tt;
				
				int n=0;
				n=number[j];
				number[j]=number[j+1];
				number[j+1]=n;
			}
		}
	}
}

int main(){
	int n;//任务总数 
	int t[100]={0};//任务加工时间 
	int number[100]={0};//任务编号 
	int MinTime1=0;//第一台机器上的最短总加工时间 
	int MinTime2=0;//第二台机器上的最短总加工时间 
	int status[100]={0};//标记任务由哪台机器加工
	 
	printf("输入待加工的任务总数:");
	scanf("%d",&n);
	printf("\n");
	
	printf("分别输入每项任务的加工时间:");
	for(int i=0;i<n;i++){
		scanf("%d",&t[i]);
		number[i]=i+1;
	}
	printf("\n");
	
	printf("任务编号     任务加工时间\n");
	for(int i=0;i<n;i++){
		printf("%5d         %5d\n",number[i],t[i]);
	}
	printf("\n");
	
	bubble_sort(n,t,number);//任务的编号要随着任务加工时间的交换而交换 
	
	
	if(n<=2){
		MinTime1=t[0];//任务总数不超过机器数（这里机器总数为2）时,最短总加工时间一定是下标为0的任务的加工时间，且此时该任务一定由第一台机器加工 
		status[0]=1;//标记为第一台机器加工 
	} 
	else{
		for(int i=0;i<n;i++){
			if(MinTime1<=MinTime2){//由第一台机器加工，注意这里的判断条件一定是小于等于而不是小于，否则会出现错误 
				MinTime1=MinTime1+t[i];
				status[i]=1;//标记为第一台机器加工 
			}
			else{//由第二台机器加工 
				MinTime2=MinTime2+t[i];	
			}
		} 
	}  
	
	//注意最短总加工时间必须保证所有的任务都已加工完毕 
	if(MinTime1>=MinTime2){
		printf("最短总加工时间为:%d\n",MinTime1);
	}
	else{
		printf("最短总加工时间为:%d\n",MinTime2);
	}
	printf("\n");
	
	printf("注意对应机器上的任务编号出现的顺序就是该机器上任务被加工的顺序!\n\n");
	
	printf("第一台机器上加工的任务的任务编号为:");
	for(int i=0;i<n;i++){
		if(status[i]==1){
			printf("%d ",number[i]);
		}
	}
	printf("\n\n");
	
	printf("第二台机器上加工的任务的任务编号为:");
	for(int i=0;i<n;i++){
		if(status[i]!=1){
			printf("%d ",number[i]);
		}
	}
	printf("\n");
	
	return 0;
}
